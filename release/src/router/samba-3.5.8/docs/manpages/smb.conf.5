'\" t
.\"     Title: smb.conf
.\"    Author: [see the "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 03/06/2011
.\"    Manual: File Formats and Conventions
.\"    Source: Samba 3.5
.\"  Language: English
.\"
.TH "SMB\&.CONF" "5" "03/06/2011" "Samba 3\&.5" "File Formats and Conventions"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
smb.conf \- The configuration file for the Samba suite
.SH "SYNOPSIS"
.PP
The
smb\&.conf
file is a configuration file for the Samba suite\&.
smb\&.conf
contains runtime configuration information for the Samba programs\&. The
smb\&.conf
file is designed to be configured and administered by the
\fBswat\fR(8)
program\&. The complete description of the file format and possible parameters held within are here for reference purposes\&.
.SH "FILE FORMAT"
.PP
The file consists of sections and parameters\&. A section begins with the name of the section in square brackets and continues until the next section begins\&. Sections contain parameters of the form:
.sp
.if n \{\
.RS 4
.\}
.nf
\fIname\fR = \fIvalue \fR
.fi
.if n \{\
.RE
.\}
.PP
The file is line\-based \- that is, each newline\-terminated line represents either a comment, a section name or a parameter\&.
.PP
Section and parameter names are not case sensitive\&.
.PP
Only the first equals sign in a parameter is significant\&. Whitespace before or after the first equals sign is discarded\&. Leading, trailing and internal whitespace in section and parameter names is irrelevant\&. Leading and trailing whitespace in a parameter value is discarded\&. Internal whitespace within a parameter value is retained verbatim\&.
.PP
Any line beginning with a semicolon (\(lq;\(rq) or a hash (\(lq#\(rq) character is ignored, as are lines containing only whitespace\&.
.PP
Any line ending in a
\(lq\e\(rq
is continued on the next line in the customary UNIX fashion\&.
.PP
The values following the equals sign in parameters are all either a string (no quotes needed) or a boolean, which may be given as yes/no, 1/0 or true/false\&. Case is not significant in boolean values, but is preserved in string values\&. Some items such as create masks are numeric\&.
.SH "SECTION DESCRIPTIONS"
.PP
Each section in the configuration file (except for the [global] section) describes a shared resource (known as a
\(lqshare\(rq)\&. The section name is the name of the shared resource and the parameters within the section define the shares attributes\&.
.PP
There are three special sections, [global], [homes] and [printers], which are described under
\fIspecial sections\fR\&. The following notes apply to ordinary section descriptions\&.
.PP
A share consists of a directory to which access is being given plus a description of the access rights which are granted to the user of the service\&. Some housekeeping options are also specifiable\&.
.PP
Sections are either file share services (used by the client as an extension of their native file systems) or printable services (used by the client to access print services on the host running the server)\&.
.PP
Sections may be designated
\fIguest\fR
services, in which case no password is required to access them\&. A specified UNIX
\fIguest account\fR
is used to define access privileges in this case\&.
.PP
Sections other than guest services will require a password to access them\&. The client provides the username\&. As older clients only provide passwords and not usernames, you may specify a list of usernames to check against the password using the
user =
option in the share definition\&. For modern clients such as Windows 95/98/ME/NT/2000, this should not be necessary\&.
.PP
The access rights granted by the server are masked by the access rights granted to the specified or guest UNIX user by the host system\&. The server does not grant more access than the host system grants\&.
.PP
The following sample section defines a file space share\&. The user has write access to the path
/home/bar\&. The share is accessed via the share name
foo:
.sp
.if n \{\
.RS 4
.\}
.nf
	\fI[foo]\fR
	\m[blue]\fBpath = /home/bar\fR\m[]
	\m[blue]\fBread only = no\fR\m[]
.fi
.if n \{\
.RE
.\}
.PP
The following sample section defines a printable share\&. The share is read\-only, but printable\&. That is, the only write access permitted is via calls to open, write to and close a spool file\&. The
\fIguest ok\fR
parameter means access will be permitted as the default guest user (specified elsewhere):
.sp
.if n \{\
.RS 4
.\}
.nf
	\fI[aprinter]\fR
	\m[blue]\fBpath = /usr/spool/public\fR\m[]
	\m[blue]\fBread only = yes\fR\m[]
	\m[blue]\fBprintable = yes\fR\m[]
	\m[blue]\fBguest ok = yes\fR\m[]
.fi
.if n \{\
.RE
.\}
.sp
.SH "SPECIAL SECTIONS"
.SS "The [global] section"
.PP
Parameters in this section apply to the server as a whole, or are defaults for sections that do not specifically define certain items\&. See the notes under PARAMETERS for more information\&.
.SS "The [homes] section"
.PP
If a section called [homes] is included in the configuration file, services connecting clients to their home directories can be created on the fly by the server\&.
.PP
When the connection request is made, the existing sections are scanned\&. If a match is found, it is used\&. If no match is found, the requested section name is treated as a username and looked up in the local password file\&. If the name exists and the correct password has been given, a share is created by cloning the [homes] section\&.
.PP
Some modifications are then made to the newly created share:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
The share name is changed from homes to the located username\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
If no path was given, the path is set to the user\'s home directory\&.
.sp
.RE
.PP
If you decide to use a
\fIpath =\fR
line in your [homes] section, it may be useful to use the %S macro\&. For example:
.sp
.if n \{\
.RS 4
.\}
.nf
\fBpath = /data/pchome/%S\fR
.fi
.if n \{\
.RE
.\}
.sp
is useful if you have different home directories for your PCs than for UNIX access\&.
.PP
This is a fast and simple way to give a large number of clients access to their home directories with a minimum of fuss\&.
.PP
A similar process occurs if the requested section name is
\(lqhomes\(rq, except that the share name is not changed to that of the requesting user\&. This method of using the [homes] section works well if different users share a client PC\&.
.PP
The [homes] section can specify all the parameters a normal service section can specify, though some make more sense than others\&. The following is a typical and suitable [homes] section:
.sp
.if n \{\
.RS 4
.\}
.nf
\fI[homes]\fR
\m[blue]\fBread only = no\fR\m[]
.fi
.if n \{\
.RE
.\}
.PP
An important point is that if guest access is specified in the [homes] section, all home directories will be visible to all clients
\fIwithout a password\fR\&. In the very unlikely event that this is actually desirable, it is wise to also specify
\fIread only access\fR\&.
.PP
The
\fIbrowseable\fR
flag for auto home directories will be inherited from the global browseable flag, not the [homes] browseable flag\&. This is useful as it means setting
\fIbrowseable = no\fR
in the [homes] section will hide the [homes] share but make any auto home directories visible\&.
.SS "The [printers] section"
.PP
This section works like [homes], but for printers\&.
.PP
If a [printers] section occurs in the configuration file, users are able to connect to any printer specified in the local host\'s printcap file\&.
.PP
When a connection request is made, the existing sections are scanned\&. If a match is found, it is used\&. If no match is found, but a [homes] section exists, it is used as described above\&. Otherwise, the requested section name is treated as a printer name and the appropriate printcap file is scanned to see if the requested section name is a valid printer share name\&. If a match is found, a new printer share is created by cloning the [printers] section\&.
.PP
A few modifications are then made to the newly created share:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
The share name is set to the located printer name
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
If no printer name was given, the printer name is set to the located printer name
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
If the share does not permit guest access and no username was given, the username is set to the located printer name\&.
.sp
.RE
.PP
The [printers] service MUST be printable \- if you specify otherwise, the server will refuse to load the configuration file\&.
.PP
Typically the path specified is that of a world\-writeable spool directory with the sticky bit set on it\&. A typical [printers] entry looks like this:
.sp
.if n \{\
.RS 4
.\}
.nf
\fI[printers]\fR
\m[blue]\fBpath = /usr/spool/public\fR\m[]
\m[blue]\fBguest ok = yes\fR\m[]
\m[blue]\fBprintable = yes\fR\m[]
.fi
.if n \{\
.RE
.\}
.PP
All aliases given for a printer in the printcap file are legitimate printer names as far as the server is concerned\&. If your printing subsystem doesn\'t work like that, you will have to set up a pseudo\-printcap\&. This is a file consisting of one or more lines like this:
.sp
.if n \{\
.RS 4
.\}
.nf
alias|alias|alias|alias\&.\&.\&.    
.fi
.if n \{\
.RE
.\}
.PP
Each alias should be an acceptable printer name for your printing subsystem\&. In the [global] section, specify the new file as your printcap\&. The server will only recognize names found in your pseudo\-printcap, which of course can contain whatever aliases you like\&. The same technique could be used simply to limit access to a subset of your local printers\&.
.PP
An alias, by the way, is defined as any component of the first entry of a printcap record\&. Records are separated by newlines, components (if there are more than one) are separated by vertical bar symbols (|)\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
On SYSV systems which use lpstat to determine what printers are defined on the system you may be able to use
printcap name = lpstat
to automatically obtain a list of printers\&. See the
printcap name
option for more details\&.
.sp .5v
.RE
.SH "USERSHARES"
.PP
Starting with Samba version 3\&.0\&.23 the capability for non\-root users to add, modify, and delete their own share definitions has been added\&. This capability is called
\fIusershares\fR
and is controlled by a set of parameters in the [global] section of the smb\&.conf\&. The relevant parameters are :
.PP
usershare allow guests
.RS 4
Controls if usershares can permit guest access\&.
.RE
.PP
usershare max shares
.RS 4
Maximum number of user defined shares allowed\&.
.RE
.PP
usershare owner only
.RS 4
If set only directories owned by the sharing user can be shared\&.
.RE
.PP
usershare path
.RS 4
Points to the directory containing the user defined share definitions\&. The filesystem permissions on this directory control who can create user defined shares\&.
.RE
.PP
usershare prefix allow list
.RS 4
Comma\-separated list of absolute pathnames restricting what directories can be shared\&. Only directories below the pathnames in this list are permitted\&.
.RE
.PP
usershare prefix deny list
.RS 4
Comma\-separated list of absolute pathnames restricting what directories can be shared\&. Directories below the pathnames in this list are prohibited\&.
.RE
.PP
usershare template share
.RS 4
Names a pre\-existing share used as a template for creating new usershares\&. All other share parameters not specified in the user defined share definition are copied from this named share\&.
.RE
.PP
To allow members of the UNIX group
foo
to create user defined shares, create the directory to contain the share definitions as follows:
.PP
Become root:
.sp
.if n \{\
.RS 4
.\}
.nf
mkdir /usr/local/samba/lib/usershares
chgrp foo /usr/local/samba/lib/usershares
chmod 1770 /usr/local/samba/lib/usershares
.fi
.if n \{\
.RE
.\}
.PP
Then add the parameters
.sp
.if n \{\
.RS 4
.\}
.nf
	\m[blue]\fBusershare path = /usr/local/samba/lib/usershares\fR\m[]
	\m[blue]\fBusershare max shares = 10\fR\m[] # (or the desired number of shares)
.fi
.if n \{\
.RE
.\}
.sp
to the global section of your
smb\&.conf\&. Members of the group foo may then manipulate the user defined shares using the following commands\&.
.PP
net usershare add sharename path [comment] [acl] [guest_ok=[y|n]]
.RS 4
To create or modify (overwrite) a user defined share\&.
.RE
.PP
net usershare delete sharename
.RS 4
To delete a user defined share\&.
.RE
.PP
net usershare list wildcard\-sharename
.RS 4
To list user defined shares\&.
.RE
.PP
net usershare info wildcard\-sharename
.RS 4
To print information about user defined shares\&.
.RE
.SH "PARAMETERS"
.PP
Parameters define the specific attributes of sections\&.
.PP
Some parameters are specific to the [global] section (e\&.g\&.,
\fIsecurity\fR)\&. Some parameters are usable in all sections (e\&.g\&.,
\fIcreate mask\fR)\&. All others are permissible only in normal sections\&. For the purposes of the following descriptions the [homes] and [printers] sections will be considered normal\&. The letter
\fIG\fR
in parentheses indicates that a parameter is specific to the [global] section\&. The letter
\fIS\fR
indicates that a parameter can be specified in a service specific section\&. All
\fIS\fR
parameters can also be specified in the [global] section \- in which case they will define the default behavior for all services\&.
.PP
Parameters are arranged here in alphabetical order \- this may not create best bedfellows, but at least you can find them! Where there are synonyms, the preferred synonym is described, others refer to the preferred synonym\&.
.SH "VARIABLE SUBSTITUTIONS"
.PP
Many of the strings that are settable in the config file can take substitutions\&. For example the option
\(lqpath = /tmp/%u\(rq
is interpreted as
\(lqpath = /tmp/john\(rq
if the user connected with the username john\&.
.PP
These substitutions are mostly noted in the descriptions below, but there are some general substitutions which apply whenever they might be relevant\&. These are:
.PP
%U
.RS 4
session username (the username that the client wanted, not necessarily the same as the one they got)\&.
.RE
.PP
%G
.RS 4
primary group name of %U\&.
.RE
.PP
%h
.RS 4
the Internet hostname that Samba is running on\&.
.RE
.PP
%m
.RS 4
the NetBIOS name of the client machine (very useful)\&.
.sp
This parameter is not available when Samba listens on port 445, as clients no longer send this information\&. If you use this macro in an include statement on a domain that has a Samba domain controller be sure to set in the [global] section
\fIsmb ports = 139\fR\&. This will cause Samba to not listen on port 445 and will permit include functionality to function as it did with Samba 2\&.x\&.
.RE
.PP
%L
.RS 4
the NetBIOS name of the server\&. This allows you to change your config based on what the client calls you\&. Your server can have a
\(lqdual personality\(rq\&.
.RE
.PP
%M
.RS 4
the Internet name of the client machine\&.
.RE
.PP
%R
.RS 4
the selected protocol level after protocol negotiation\&. It can be one of CORE, COREPLUS, LANMAN1, LANMAN2 or NT1\&.
.RE
.PP
%d
.RS 4
the process id of the current server process\&.
.RE
.PP
%a
.RS 4
The architecture of the remote machine\&. It currently recognizes Samba (\fBSamba\fR), the Linux CIFS file system (\fBCIFSFS\fR), OS/2, (\fBOS2\fR), Windows for Workgroups (\fBWfWg\fR), Windows 9x/ME (\fBWin95\fR), Windows NT (\fBWinNT\fR), Windows 2000 (\fBWin2K\fR), Windows XP (\fBWinXP\fR), Windows XP 64\-bit(\fBWinXP64\fR), Windows 2003 including 2003R2 (\fBWin2K3\fR), and Windows Vista (\fBVista\fR)\&. Anything else will be known as
\fBUNKNOWN\fR\&.
.RE
.PP
%I
.RS 4
the IP address of the client machine\&.
.RE
.PP
%i
.RS 4
the local IP address to which a client connected\&.
.RE
.PP
%T
.RS 4
the current date and time\&.
.RE
.PP
%D
.RS 4
name of the domain or workgroup of the current user\&.
.RE
.PP
%w
.RS 4
the winbind separator\&.
.RE
.PP
%$(\fIenvvar\fR)
.RS 4
the value of the environment variable
\fIenvar\fR\&.
.RE
.PP
The following substitutes apply only to some configuration options (only those that are used when a connection has been established):
.PP
%S
.RS 4
the name of the current service, if any\&.
.RE
.PP
%P
.RS 4
the root directory of the current service, if any\&.
.RE
.PP
%u
.RS 4
username of the current service, if any\&.
.RE
.PP
%g
.RS 4
primary group name of %u\&.
.RE
.PP
%H
.RS 4
the home directory of the user given by %u\&.
.RE
.PP
%N
.RS 4
the name of your NIS home directory server\&. This is obtained from your NIS auto\&.map entry\&. If you have not compiled Samba with the
\fI\-\-with\-automount\fR
option, this value will be the same as %L\&.
.RE
.PP
%p
.RS 4
the path of the service\'s home directory, obtained from your NIS auto\&.map entry\&. The NIS auto\&.map entry is split up as
%N:%p\&.
.RE
.PP
There are some quite creative things that can be done with these substitutions and other
smb\&.conf
options\&.
.SH "NAME MANGLING"
.PP
Samba supports
name mangling
so that DOS and Windows clients can use files that don\'t conform to the 8\&.3 format\&. It can also be set to adjust the case of 8\&.3 format filenames\&.
.PP
There are several options that control the way mangling is performed, and they are grouped here rather than listed separately\&. For the defaults look at the output of the testparm program\&.
.PP
These options can be set separately for each service\&.
.PP
The options are:
.PP
case sensitive = yes/no/auto
.RS 4
controls whether filenames are case sensitive\&. If they aren\'t, Samba must do a filename search and match on passed names\&. The default setting of auto allows clients that support case sensitive filenames (Linux CIFSVFS and smbclient 3\&.0\&.5 and above currently) to tell the Samba server on a per\-packet basis that they wish to access the file system in a case\-sensitive manner (to support UNIX case sensitive semantics)\&. No Windows or DOS system supports case\-sensitive filename so setting this option to auto is that same as setting it to no for them\&. Default
\fIauto\fR\&.
.RE
.PP
default case = upper/lower
.RS 4
controls what the default case is for new filenames (ie\&. files that don\'t currently exist in the filesystem)\&. Default
\fIlower\fR\&. IMPORTANT NOTE: This option will be used to modify the case of
\fIall\fR
incoming client filenames, not just new filenames if the options
\m[blue]\fBcase sensitive = yes\fR\m[],
\m[blue]\fBpreserve case = No\fR\m[],
\m[blue]\fBshort preserve case = No\fR\m[]
are set\&. This change is needed as part of the optimisations for directories containing large numbers of files\&.
.RE
.PP
preserve case = yes/no
.RS 4
controls whether new files (ie\&. files that don\'t currently exist in the filesystem) are created with the case that the client passes, or if they are forced to be the
default
case\&. Default
\fIyes\fR\&.
.RE
.PP
short preserve case = yes/no
.RS 4
controls if new files (ie\&. files that don\'t currently exist in the filesystem) which conform to 8\&.3 syntax, that is all in upper case and of suitable length, are created upper case, or if they are forced to be the
default
case\&. This option can be used with
preserve case = yes
to permit long filenames to retain their case, while short names are lowercased\&. Default
\fIyes\fR\&.
.RE
.PP
By default, Samba 3\&.0 has the same semantics as a Windows NT server, in that it is case insensitive but case preserving\&. As a special case for directories with large numbers of files, if the case options are set as follows, "case sensitive = yes", "case preserve = no", "short preserve case = no" then the "default case" option will be applied and will modify all filenames sent from the client when accessing this share\&.
.SH "NOTE ABOUT USERNAME/PASSWORD VALIDATION"
.PP
There are a number of ways in which a user can connect to a service\&. The server uses the following steps in determining if it will allow a connection to a specified service\&. If all the steps fail, the connection request is rejected\&. However, if one of the steps succeeds, the following steps are not checked\&.
.PP
If the service is marked
\(lqguest only = yes\(rq
and the server is running with share\-level security (\(lqsecurity = share\(rq, steps 1 to 5 are skipped\&.
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
If the client has passed a username/password pair and that username/password pair is validated by the UNIX system\'s password programs, the connection is made as that username\&. This includes the
\e\eserver\eservice%\fIusername\fR
method of passing a username\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
If the client has previously registered a username with the system and now supplies a correct password for that username, the connection is allowed\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
The client\'s NetBIOS name and any previously used usernames are checked against the supplied password\&. If they match, the connection is allowed as the corresponding user\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
If the client has previously validated a username/password pair with the server and the client has passed the validation token, that username is used\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}
If a
user =
field is given in the
smb\&.conf
file for the service and the client has supplied a password, and that password matches (according to the UNIX system\'s password checking) with one of the usernames from the
user =
field, the connection is made as the username in the
user =
line\&. If one of the usernames in the
user =
list begins with a
@, that name expands to a list of names in the group of the same name\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 6.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  6." 4.2
.\}
If the service is a guest service, a connection is made as the username given in the
guest account =
for the service, irrespective of the supplied password\&.
.RE
.SH "REGISTRY-BASED CONFIGURATION"
.PP
Starting with Samba version 3\&.2\&.0, the capability to store Samba configuration in the registry is available\&. The configuration is stored in the registry key
\fIHKLM\eSoftware\eSamba\esmbconf\fR\&. There are two levels of registry configuration:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Share definitions stored in registry are used\&. This is triggered by setting the global parameter
\fIregistry shares\fR
to
\(lqyes\(rq
in
\fIsmb\&.conf\fR\&.
.sp
The registry shares are loaded not at startup but on demand at runtime by
\fIsmbd\fR\&. Shares defined in
\fIsmb\&.conf\fR
take priority over shares of the same name defined in registry\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Global
\fIsmb\&.conf\fR
options stored in registry are used\&. This can be activated in two different ways:
.sp
Firstly, a registry only configuration is triggered by setting
\m[blue]\fBconfig backend = registry\fR\m[]
in the [global] section of
\fIsmb\&.conf\fR\&. This resets everything that has been read from config files to this point and reads the content of the global configuration section from the registry\&. This is the recommended method of using registry based configuration\&.
.sp
Secondly, a mixed configuration can be activated by a special new meaning of the parameter
\m[blue]\fBinclude = registry\fR\m[]
in the [global] section of
\fIsmb\&.conf\fR\&. This reads the global options from registry with the same priorities as for an include of a text file\&. This may be especially useful in cases where an initial configuration is needed to access the registry\&.
.sp
Activation of global registry options automatically activates registry shares\&. So in the registry only case, shares are loaded on demand only\&.
.RE
.sp
.RE
.PP
Note: To make registry\-based configurations foolproof at least to a certain extent, the use of
\fIlock directory\fR
and
\fIconfig backend\fR
inside the registry configuration has been disabled: Especially by changing the
\fIlock directory\fR
inside the registry configuration, one would create a broken setup where the daemons do not see the configuration they loaded once it is active\&.
.PP
The registry configuration can be accessed with tools like
\fIregedit\fR
or
\fInet (rpc) registry\fR
in the key
\fIHKLM\eSoftware\eSamba\esmbconf\fR\&. More conveniently, the
\fIconf\fR
subcommand of the
\fBnet\fR(8)
utility offers a dedicated interface to read and write the registry based configuration locally, i\&.e\&. directly accessing the database file, circumventing the server\&.
.SH "EXPLANATION OF EACH PARAMETER"
<xi:include></xi:include>.SH "WARNINGS"
.PP
Although the configuration file permits service names to contain spaces, your client software may not\&. Spaces will be ignored in comparisons anyway, so it shouldn\'t be a problem \- but be aware of the possibility\&.
.PP
On a similar note, many clients \- especially DOS clients \- limit service names to eight characters\&.
\fBsmbd\fR(8)
has no such limitation, but attempts to connect from such clients will fail if they truncate the service names\&. For this reason you should probably keep your service names down to eight characters in length\&.
.PP
Use of the
[homes]
and
[printers]
special sections make life for an administrator easy, but the various combinations of default attributes can be tricky\&. Take extreme care when designing these sections\&. In particular, ensure that the permissions on spool directories are correct\&.
.SH "VERSION"
.PP
This man page is correct for version 3 of the Samba suite\&.
.SH "SEE ALSO"
.PP

\fBsamba\fR(7),
\fBsmbpasswd\fR(8),
\fBswat\fR(8),
\fBsmbd\fR(8),
\fBnmbd\fR(8),
\fBsmbclient\fR(1),
\fBnmblookup\fR(1),
\fBtestparm\fR(1),
\fBtestprns\fR(1)\&.
.SH "AUTHOR"
.PP
The original Samba software and related utilities were created by Andrew Tridgell\&. Samba is now developed by the Samba Team as an Open Source project similar to the way the Linux kernel is developed\&.
.PP
The original Samba man pages were written by Karl Auer\&. The man page sources were converted to YODL format (another excellent piece of Open Source software, available at
ftp://ftp\&.icce\&.rug\&.nl/pub/unix/) and updated for the Samba 2\&.0 release by Jeremy Allison\&. The conversion to DocBook for Samba 2\&.2 was done by Gerald Carter\&. The conversion to DocBook XML 4\&.2 for Samba 3\&.0 was done by Alexander Bokovoy\&.
