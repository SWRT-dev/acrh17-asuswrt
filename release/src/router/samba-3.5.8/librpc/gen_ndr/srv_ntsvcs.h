#include "../librpc/gen_ndr/ndr_ntsvcs.h"
#ifndef __SRV_NTSVCS__
#define __SRV_NTSVCS__
WERROR _PNP_Disconnect(pipes_struct *p, struct PNP_Disconnect *r);
WERROR _PNP_Connect(pipes_struct *p, struct PNP_Connect *r);
WERROR _PNP_GetVersion(pipes_struct *p, struct PNP_GetVersion *r);
WERROR _PNP_GetGlobalState(pipes_struct *p, struct PNP_GetGlobalState *r);
WERROR _PNP_InitDetection(pipes_struct *p, struct PNP_InitDetection *r);
WERROR _PNP_ReportLogOn(pipes_struct *p, struct PNP_ReportLogOn *r);
WERROR _PNP_ValidateDeviceInstance(pipes_struct *p, struct PNP_ValidateDeviceInstance *r);
WERROR _PNP_GetRootDeviceInstance(pipes_struct *p, struct PNP_GetRootDeviceInstance *r);
WERROR _PNP_GetRelatedDeviceInstance(pipes_struct *p, struct PNP_GetRelatedDeviceInstance *r);
WERROR _PNP_EnumerateSubKeys(pipes_struct *p, struct PNP_EnumerateSubKeys *r);
WERROR _PNP_GetDeviceList(pipes_struct *p, struct PNP_GetDeviceList *r);
WERROR _PNP_GetDeviceListSize(pipes_struct *p, struct PNP_GetDeviceListSize *r);
WERROR _PNP_GetDepth(pipes_struct *p, struct PNP_GetDepth *r);
WERROR _PNP_GetDeviceRegProp(pipes_struct *p, struct PNP_GetDeviceRegProp *r);
WERROR _PNP_SetDeviceRegProp(pipes_struct *p, struct PNP_SetDeviceRegProp *r);
WERROR _PNP_GetClassInstance(pipes_struct *p, struct PNP_GetClassInstance *r);
WERROR _PNP_CreateKey(pipes_struct *p, struct PNP_CreateKey *r);
WERROR _PNP_DeleteRegistryKey(pipes_struct *p, struct PNP_DeleteRegistryKey *r);
WERROR _PNP_GetClassCount(pipes_struct *p, struct PNP_GetClassCount *r);
WERROR _PNP_GetClassName(pipes_struct *p, struct PNP_GetClassName *r);
WERROR _PNP_DeleteClassKey(pipes_struct *p, struct PNP_DeleteClassKey *r);
WERROR _PNP_GetInterfaceDeviceAlias(pipes_struct *p, struct PNP_GetInterfaceDeviceAlias *r);
WERROR _PNP_GetInterfaceDeviceList(pipes_struct *p, struct PNP_GetInterfaceDeviceList *r);
WERROR _PNP_GetInterfaceDeviceListSize(pipes_struct *p, struct PNP_GetInterfaceDeviceListSize *r);
WERROR _PNP_RegisterDeviceClassAssociation(pipes_struct *p, struct PNP_RegisterDeviceClassAssociation *r);
WERROR _PNP_UnregisterDeviceClassAssociation(pipes_struct *p, struct PNP_UnregisterDeviceClassAssociation *r);
WERROR _PNP_GetClassRegProp(pipes_struct *p, struct PNP_GetClassRegProp *r);
WERROR _PNP_SetClassRegProp(pipes_struct *p, struct PNP_SetClassRegProp *r);
WERROR _PNP_CreateDevInst(pipes_struct *p, struct PNP_CreateDevInst *r);
WERROR _PNP_DeviceInstanceAction(pipes_struct *p, struct PNP_DeviceInstanceAction *r);
WERROR _PNP_GetDeviceStatus(pipes_struct *p, struct PNP_GetDeviceStatus *r);
WERROR _PNP_SetDeviceProblem(pipes_struct *p, struct PNP_SetDeviceProblem *r);
WERROR _PNP_DisableDevInst(pipes_struct *p, struct PNP_DisableDevInst *r);
WERROR _PNP_UninstallDevInst(pipes_struct *p, struct PNP_UninstallDevInst *r);
WERROR _PNP_AddID(pipes_struct *p, struct PNP_AddID *r);
WERROR _PNP_RegisterDriver(pipes_struct *p, struct PNP_RegisterDriver *r);
WERROR _PNP_QueryRemove(pipes_struct *p, struct PNP_QueryRemove *r);
WERROR _PNP_RequestDeviceEject(pipes_struct *p, struct PNP_RequestDeviceEject *r);
WERROR _PNP_IsDockStationPresent(pipes_struct *p, struct PNP_IsDockStationPresent *r);
WERROR _PNP_RequestEjectPC(pipes_struct *p, struct PNP_RequestEjectPC *r);
WERROR _PNP_HwProfFlags(pipes_struct *p, struct PNP_HwProfFlags *r);
WERROR _PNP_GetHwProfInfo(pipes_struct *p, struct PNP_GetHwProfInfo *r);
WERROR _PNP_AddEmptyLogConf(pipes_struct *p, struct PNP_AddEmptyLogConf *r);
WERROR _PNP_FreeLogConf(pipes_struct *p, struct PNP_FreeLogConf *r);
WERROR _PNP_GetFirstLogConf(pipes_struct *p, struct PNP_GetFirstLogConf *r);
WERROR _PNP_GetNextLogConf(pipes_struct *p, struct PNP_GetNextLogConf *r);
WERROR _PNP_GetLogConfPriority(pipes_struct *p, struct PNP_GetLogConfPriority *r);
WERROR _PNP_AddResDes(pipes_struct *p, struct PNP_AddResDes *r);
WERROR _PNP_FreeResDes(pipes_struct *p, struct PNP_FreeResDes *r);
WERROR _PNP_GetNextResDes(pipes_struct *p, struct PNP_GetNextResDes *r);
WERROR _PNP_GetResDesData(pipes_struct *p, struct PNP_GetResDesData *r);
WERROR _PNP_GetResDesDataSize(pipes_struct *p, struct PNP_GetResDesDataSize *r);
WERROR _PNP_ModifyResDes(pipes_struct *p, struct PNP_ModifyResDes *r);
WERROR _PNP_DetectResourceLimit(pipes_struct *p, struct PNP_DetectResourceLimit *r);
WERROR _PNP_QueryResConfList(pipes_struct *p, struct PNP_QueryResConfList *r);
WERROR _PNP_SetHwProf(pipes_struct *p, struct PNP_SetHwProf *r);
WERROR _PNP_QueryArbitratorFreeData(pipes_struct *p, struct PNP_QueryArbitratorFreeData *r);
WERROR _PNP_QueryArbitratorFreeSize(pipes_struct *p, struct PNP_QueryArbitratorFreeSize *r);
WERROR _PNP_RunDetection(pipes_struct *p, struct PNP_RunDetection *r);
WERROR _PNP_RegisterNotification(pipes_struct *p, struct PNP_RegisterNotification *r);
WERROR _PNP_UnregisterNotification(pipes_struct *p, struct PNP_UnregisterNotification *r);
WERROR _PNP_GetCustomDevProp(pipes_struct *p, struct PNP_GetCustomDevProp *r);
WERROR _PNP_GetVersionInternal(pipes_struct *p, struct PNP_GetVersionInternal *r);
WERROR _PNP_GetBlockedDriverInfo(pipes_struct *p, struct PNP_GetBlockedDriverInfo *r);
WERROR _PNP_GetServerSideDeviceInstallFlags(pipes_struct *p, struct PNP_GetServerSideDeviceInstallFlags *r);
void ntsvcs_get_pipe_fns(struct api_struct **fns, int *n_fns);
NTSTATUS rpc_ntsvcs_dispatch(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx, const struct ndr_interface_table *table, uint32_t opnum, void *r);
WERROR _PNP_Disconnect(pipes_struct *p, struct PNP_Disconnect *r);
WERROR _PNP_Connect(pipes_struct *p, struct PNP_Connect *r);
WERROR _PNP_GetVersion(pipes_struct *p, struct PNP_GetVersion *r);
WERROR _PNP_GetGlobalState(pipes_struct *p, struct PNP_GetGlobalState *r);
WERROR _PNP_InitDetection(pipes_struct *p, struct PNP_InitDetection *r);
WERROR _PNP_ReportLogOn(pipes_struct *p, struct PNP_ReportLogOn *r);
WERROR _PNP_ValidateDeviceInstance(pipes_struct *p, struct PNP_ValidateDeviceInstance *r);
WERROR _PNP_GetRootDeviceInstance(pipes_struct *p, struct PNP_GetRootDeviceInstance *r);
WERROR _PNP_GetRelatedDeviceInstance(pipes_struct *p, struct PNP_GetRelatedDeviceInstance *r);
WERROR _PNP_EnumerateSubKeys(pipes_struct *p, struct PNP_EnumerateSubKeys *r);
WERROR _PNP_GetDeviceList(pipes_struct *p, struct PNP_GetDeviceList *r);
WERROR _PNP_GetDeviceListSize(pipes_struct *p, struct PNP_GetDeviceListSize *r);
WERROR _PNP_GetDepth(pipes_struct *p, struct PNP_GetDepth *r);
WERROR _PNP_GetDeviceRegProp(pipes_struct *p, struct PNP_GetDeviceRegProp *r);
WERROR _PNP_SetDeviceRegProp(pipes_struct *p, struct PNP_SetDeviceRegProp *r);
WERROR _PNP_GetClassInstance(pipes_struct *p, struct PNP_GetClassInstance *r);
WERROR _PNP_CreateKey(pipes_struct *p, struct PNP_CreateKey *r);
WERROR _PNP_DeleteRegistryKey(pipes_struct *p, struct PNP_DeleteRegistryKey *r);
WERROR _PNP_GetClassCount(pipes_struct *p, struct PNP_GetClassCount *r);
WERROR _PNP_GetClassName(pipes_struct *p, struct PNP_GetClassName *r);
WERROR _PNP_DeleteClassKey(pipes_struct *p, struct PNP_DeleteClassKey *r);
WERROR _PNP_GetInterfaceDeviceAlias(pipes_struct *p, struct PNP_GetInterfaceDeviceAlias *r);
WERROR _PNP_GetInterfaceDeviceList(pipes_struct *p, struct PNP_GetInterfaceDeviceList *r);
WERROR _PNP_GetInterfaceDeviceListSize(pipes_struct *p, struct PNP_GetInterfaceDeviceListSize *r);
WERROR _PNP_RegisterDeviceClassAssociation(pipes_struct *p, struct PNP_RegisterDeviceClassAssociation *r);
WERROR _PNP_UnregisterDeviceClassAssociation(pipes_struct *p, struct PNP_UnregisterDeviceClassAssociation *r);
WERROR _PNP_GetClassRegProp(pipes_struct *p, struct PNP_GetClassRegProp *r);
WERROR _PNP_SetClassRegProp(pipes_struct *p, struct PNP_SetClassRegProp *r);
WERROR _PNP_CreateDevInst(pipes_struct *p, struct PNP_CreateDevInst *r);
WERROR _PNP_DeviceInstanceAction(pipes_struct *p, struct PNP_DeviceInstanceAction *r);
WERROR _PNP_GetDeviceStatus(pipes_struct *p, struct PNP_GetDeviceStatus *r);
WERROR _PNP_SetDeviceProblem(pipes_struct *p, struct PNP_SetDeviceProblem *r);
WERROR _PNP_DisableDevInst(pipes_struct *p, struct PNP_DisableDevInst *r);
WERROR _PNP_UninstallDevInst(pipes_struct *p, struct PNP_UninstallDevInst *r);
WERROR _PNP_AddID(pipes_struct *p, struct PNP_AddID *r);
WERROR _PNP_RegisterDriver(pipes_struct *p, struct PNP_RegisterDriver *r);
WERROR _PNP_QueryRemove(pipes_struct *p, struct PNP_QueryRemove *r);
WERROR _PNP_RequestDeviceEject(pipes_struct *p, struct PNP_RequestDeviceEject *r);
WERROR _PNP_IsDockStationPresent(pipes_struct *p, struct PNP_IsDockStationPresent *r);
WERROR _PNP_RequestEjectPC(pipes_struct *p, struct PNP_RequestEjectPC *r);
WERROR _PNP_HwProfFlags(pipes_struct *p, struct PNP_HwProfFlags *r);
WERROR _PNP_GetHwProfInfo(pipes_struct *p, struct PNP_GetHwProfInfo *r);
WERROR _PNP_AddEmptyLogConf(pipes_struct *p, struct PNP_AddEmptyLogConf *r);
WERROR _PNP_FreeLogConf(pipes_struct *p, struct PNP_FreeLogConf *r);
WERROR _PNP_GetFirstLogConf(pipes_struct *p, struct PNP_GetFirstLogConf *r);
WERROR _PNP_GetNextLogConf(pipes_struct *p, struct PNP_GetNextLogConf *r);
WERROR _PNP_GetLogConfPriority(pipes_struct *p, struct PNP_GetLogConfPriority *r);
WERROR _PNP_AddResDes(pipes_struct *p, struct PNP_AddResDes *r);
WERROR _PNP_FreeResDes(pipes_struct *p, struct PNP_FreeResDes *r);
WERROR _PNP_GetNextResDes(pipes_struct *p, struct PNP_GetNextResDes *r);
WERROR _PNP_GetResDesData(pipes_struct *p, struct PNP_GetResDesData *r);
WERROR _PNP_GetResDesDataSize(pipes_struct *p, struct PNP_GetResDesDataSize *r);
WERROR _PNP_ModifyResDes(pipes_struct *p, struct PNP_ModifyResDes *r);
WERROR _PNP_DetectResourceLimit(pipes_struct *p, struct PNP_DetectResourceLimit *r);
WERROR _PNP_QueryResConfList(pipes_struct *p, struct PNP_QueryResConfList *r);
WERROR _PNP_SetHwProf(pipes_struct *p, struct PNP_SetHwProf *r);
WERROR _PNP_QueryArbitratorFreeData(pipes_struct *p, struct PNP_QueryArbitratorFreeData *r);
WERROR _PNP_QueryArbitratorFreeSize(pipes_struct *p, struct PNP_QueryArbitratorFreeSize *r);
WERROR _PNP_RunDetection(pipes_struct *p, struct PNP_RunDetection *r);
WERROR _PNP_RegisterNotification(pipes_struct *p, struct PNP_RegisterNotification *r);
WERROR _PNP_UnregisterNotification(pipes_struct *p, struct PNP_UnregisterNotification *r);
WERROR _PNP_GetCustomDevProp(pipes_struct *p, struct PNP_GetCustomDevProp *r);
WERROR _PNP_GetVersionInternal(pipes_struct *p, struct PNP_GetVersionInternal *r);
WERROR _PNP_GetBlockedDriverInfo(pipes_struct *p, struct PNP_GetBlockedDriverInfo *r);
WERROR _PNP_GetServerSideDeviceInstallFlags(pipes_struct *p, struct PNP_GetServerSideDeviceInstallFlags *r);
NTSTATUS rpc_ntsvcs_init(void);
#endif /* __SRV_NTSVCS__ */
